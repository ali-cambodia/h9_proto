//
// WARNING! All changes made in this file will be lost!
// Created from 'scheme.tl' by 'mtprotoc'
//
// Copyright (c) 2024-present,  Teamgram Authors.
//  All rights reserved.
//
// Author: Benqi (wubenqi@gmail.com)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.27.1
// source: schema.tl.handshake.proto

package mtproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BindAuthKeyInner <--
//   - TL_bind_auth_key_inner
type BindAuthKeyInner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredicateName string        `protobuf:"bytes,1,opt,name=predicate_name,json=predicateName,proto3" json:"predicate_name,omitempty"`
	Constructor   TLConstructor `protobuf:"varint,2,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Nonce         int64         `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	TempAuthKeyId int64         `protobuf:"varint,4,opt,name=temp_auth_key_id,json=tempAuthKeyId,proto3" json:"temp_auth_key_id,omitempty"`
	PermAuthKeyId int64         `protobuf:"varint,5,opt,name=perm_auth_key_id,json=permAuthKeyId,proto3" json:"perm_auth_key_id,omitempty"`
	TempSessionId int64         `protobuf:"varint,6,opt,name=temp_session_id,json=tempSessionId,proto3" json:"temp_session_id,omitempty"`
	ExpiresAt     int32         `protobuf:"varint,7,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *BindAuthKeyInner) Reset() {
	*x = BindAuthKeyInner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindAuthKeyInner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindAuthKeyInner) ProtoMessage() {}

func (x *BindAuthKeyInner) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindAuthKeyInner.ProtoReflect.Descriptor instead.
func (*BindAuthKeyInner) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{0}
}

func (x *BindAuthKeyInner) GetPredicateName() string {
	if x != nil {
		return x.PredicateName
	}
	return ""
}

func (x *BindAuthKeyInner) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *BindAuthKeyInner) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *BindAuthKeyInner) GetTempAuthKeyId() int64 {
	if x != nil {
		return x.TempAuthKeyId
	}
	return 0
}

func (x *BindAuthKeyInner) GetPermAuthKeyId() int64 {
	if x != nil {
		return x.PermAuthKeyId
	}
	return 0
}

func (x *BindAuthKeyInner) GetTempSessionId() int64 {
	if x != nil {
		return x.TempSessionId
	}
	return 0
}

func (x *BindAuthKeyInner) GetExpiresAt() int32 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

// TL_bind_auth_key_inner
type TLBindAuthKeyInner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *BindAuthKeyInner `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLBindAuthKeyInner) Reset() {
	*x = TLBindAuthKeyInner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLBindAuthKeyInner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLBindAuthKeyInner) ProtoMessage() {}

func (x *TLBindAuthKeyInner) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLBindAuthKeyInner.ProtoReflect.Descriptor instead.
func (*TLBindAuthKeyInner) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{1}
}

func (x *TLBindAuthKeyInner) GetData2() *BindAuthKeyInner {
	if x != nil {
		return x.Data2
	}
	return nil
}

// Client_DH_Inner_Data <--
//   - TL_client_DH_inner_data
type Client_DH_Inner_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredicateName string        `protobuf:"bytes,1,opt,name=predicate_name,json=predicateName,proto3" json:"predicate_name,omitempty"`
	Constructor   TLConstructor `protobuf:"varint,2,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Nonce         []byte        `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ServerNonce   []byte        `protobuf:"bytes,4,opt,name=server_nonce,json=serverNonce,proto3" json:"server_nonce,omitempty"`
	RetryId       int64         `protobuf:"varint,5,opt,name=retry_id,json=retryId,proto3" json:"retry_id,omitempty"`
	GB            string        `protobuf:"bytes,6,opt,name=g_b,json=gB,proto3" json:"g_b,omitempty"`
}

func (x *Client_DH_Inner_Data) Reset() {
	*x = Client_DH_Inner_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Client_DH_Inner_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client_DH_Inner_Data) ProtoMessage() {}

func (x *Client_DH_Inner_Data) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client_DH_Inner_Data.ProtoReflect.Descriptor instead.
func (*Client_DH_Inner_Data) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{2}
}

func (x *Client_DH_Inner_Data) GetPredicateName() string {
	if x != nil {
		return x.PredicateName
	}
	return ""
}

func (x *Client_DH_Inner_Data) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *Client_DH_Inner_Data) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *Client_DH_Inner_Data) GetServerNonce() []byte {
	if x != nil {
		return x.ServerNonce
	}
	return nil
}

func (x *Client_DH_Inner_Data) GetRetryId() int64 {
	if x != nil {
		return x.RetryId
	}
	return 0
}

func (x *Client_DH_Inner_Data) GetGB() string {
	if x != nil {
		return x.GB
	}
	return ""
}

// TL_client_DH_inner_data
type TLClient_DHInnerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *Client_DH_Inner_Data `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLClient_DHInnerData) Reset() {
	*x = TLClient_DHInnerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLClient_DHInnerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLClient_DHInnerData) ProtoMessage() {}

func (x *TLClient_DHInnerData) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLClient_DHInnerData.ProtoReflect.Descriptor instead.
func (*TLClient_DHInnerData) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{3}
}

func (x *TLClient_DHInnerData) GetData2() *Client_DH_Inner_Data {
	if x != nil {
		return x.Data2
	}
	return nil
}

// DestroyAuthKeyRes <--
//   - TL_destroy_auth_key_ok
//   - TL_destroy_auth_key_none
//   - TL_destroy_auth_key_fail
type DestroyAuthKeyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredicateName string        `protobuf:"bytes,1,opt,name=predicate_name,json=predicateName,proto3" json:"predicate_name,omitempty"`
	Constructor   TLConstructor `protobuf:"varint,2,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
}

func (x *DestroyAuthKeyRes) Reset() {
	*x = DestroyAuthKeyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyAuthKeyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyAuthKeyRes) ProtoMessage() {}

func (x *DestroyAuthKeyRes) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyAuthKeyRes.ProtoReflect.Descriptor instead.
func (*DestroyAuthKeyRes) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{4}
}

func (x *DestroyAuthKeyRes) GetPredicateName() string {
	if x != nil {
		return x.PredicateName
	}
	return ""
}

func (x *DestroyAuthKeyRes) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

// TL_destroy_auth_key_ok
type TLDestroyAuthKeyOk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *DestroyAuthKeyRes `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLDestroyAuthKeyOk) Reset() {
	*x = TLDestroyAuthKeyOk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLDestroyAuthKeyOk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLDestroyAuthKeyOk) ProtoMessage() {}

func (x *TLDestroyAuthKeyOk) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLDestroyAuthKeyOk.ProtoReflect.Descriptor instead.
func (*TLDestroyAuthKeyOk) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{5}
}

func (x *TLDestroyAuthKeyOk) GetData2() *DestroyAuthKeyRes {
	if x != nil {
		return x.Data2
	}
	return nil
}

// TL_destroy_auth_key_none
type TLDestroyAuthKeyNone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *DestroyAuthKeyRes `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLDestroyAuthKeyNone) Reset() {
	*x = TLDestroyAuthKeyNone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLDestroyAuthKeyNone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLDestroyAuthKeyNone) ProtoMessage() {}

func (x *TLDestroyAuthKeyNone) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLDestroyAuthKeyNone.ProtoReflect.Descriptor instead.
func (*TLDestroyAuthKeyNone) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{6}
}

func (x *TLDestroyAuthKeyNone) GetData2() *DestroyAuthKeyRes {
	if x != nil {
		return x.Data2
	}
	return nil
}

// TL_destroy_auth_key_fail
type TLDestroyAuthKeyFail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *DestroyAuthKeyRes `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLDestroyAuthKeyFail) Reset() {
	*x = TLDestroyAuthKeyFail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLDestroyAuthKeyFail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLDestroyAuthKeyFail) ProtoMessage() {}

func (x *TLDestroyAuthKeyFail) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLDestroyAuthKeyFail.ProtoReflect.Descriptor instead.
func (*TLDestroyAuthKeyFail) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{7}
}

func (x *TLDestroyAuthKeyFail) GetData2() *DestroyAuthKeyRes {
	if x != nil {
		return x.Data2
	}
	return nil
}

// P_Q_inner_data <--
//   - TL_p_q_inner_data
//   - TL_p_q_inner_data_dc
//   - TL_p_q_inner_data_temp
//   - TL_p_q_inner_data_temp_dc
type P_QInnerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredicateName string        `protobuf:"bytes,1,opt,name=predicate_name,json=predicateName,proto3" json:"predicate_name,omitempty"`
	Constructor   TLConstructor `protobuf:"varint,2,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Pq            string        `protobuf:"bytes,3,opt,name=pq,proto3" json:"pq,omitempty"`
	P             string        `protobuf:"bytes,4,opt,name=p,proto3" json:"p,omitempty"`
	Q             string        `protobuf:"bytes,5,opt,name=q,proto3" json:"q,omitempty"`
	Nonce         []byte        `protobuf:"bytes,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ServerNonce   []byte        `protobuf:"bytes,7,opt,name=server_nonce,json=serverNonce,proto3" json:"server_nonce,omitempty"`
	NewNonce      []byte        `protobuf:"bytes,8,opt,name=new_nonce,json=newNonce,proto3" json:"new_nonce,omitempty"`
	Dc            int32         `protobuf:"varint,9,opt,name=dc,proto3" json:"dc,omitempty"`
	ExpiresIn     int32         `protobuf:"varint,10,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
}

func (x *P_QInnerData) Reset() {
	*x = P_QInnerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P_QInnerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P_QInnerData) ProtoMessage() {}

func (x *P_QInnerData) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P_QInnerData.ProtoReflect.Descriptor instead.
func (*P_QInnerData) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{8}
}

func (x *P_QInnerData) GetPredicateName() string {
	if x != nil {
		return x.PredicateName
	}
	return ""
}

func (x *P_QInnerData) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *P_QInnerData) GetPq() string {
	if x != nil {
		return x.Pq
	}
	return ""
}

func (x *P_QInnerData) GetP() string {
	if x != nil {
		return x.P
	}
	return ""
}

func (x *P_QInnerData) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *P_QInnerData) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *P_QInnerData) GetServerNonce() []byte {
	if x != nil {
		return x.ServerNonce
	}
	return nil
}

func (x *P_QInnerData) GetNewNonce() []byte {
	if x != nil {
		return x.NewNonce
	}
	return nil
}

func (x *P_QInnerData) GetDc() int32 {
	if x != nil {
		return x.Dc
	}
	return 0
}

func (x *P_QInnerData) GetExpiresIn() int32 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

// TL_p_q_inner_data
type TLPQInnerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *P_QInnerData `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLPQInnerData) Reset() {
	*x = TLPQInnerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLPQInnerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLPQInnerData) ProtoMessage() {}

func (x *TLPQInnerData) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLPQInnerData.ProtoReflect.Descriptor instead.
func (*TLPQInnerData) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{9}
}

func (x *TLPQInnerData) GetData2() *P_QInnerData {
	if x != nil {
		return x.Data2
	}
	return nil
}

// TL_p_q_inner_data_dc
type TLPQInnerDataDc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *P_QInnerData `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLPQInnerDataDc) Reset() {
	*x = TLPQInnerDataDc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLPQInnerDataDc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLPQInnerDataDc) ProtoMessage() {}

func (x *TLPQInnerDataDc) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLPQInnerDataDc.ProtoReflect.Descriptor instead.
func (*TLPQInnerDataDc) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{10}
}

func (x *TLPQInnerDataDc) GetData2() *P_QInnerData {
	if x != nil {
		return x.Data2
	}
	return nil
}

// TL_p_q_inner_data_temp
type TLPQInnerDataTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *P_QInnerData `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLPQInnerDataTemp) Reset() {
	*x = TLPQInnerDataTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLPQInnerDataTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLPQInnerDataTemp) ProtoMessage() {}

func (x *TLPQInnerDataTemp) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLPQInnerDataTemp.ProtoReflect.Descriptor instead.
func (*TLPQInnerDataTemp) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{11}
}

func (x *TLPQInnerDataTemp) GetData2() *P_QInnerData {
	if x != nil {
		return x.Data2
	}
	return nil
}

// TL_p_q_inner_data_temp_dc
type TLPQInnerDataTempDc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *P_QInnerData `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLPQInnerDataTempDc) Reset() {
	*x = TLPQInnerDataTempDc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLPQInnerDataTempDc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLPQInnerDataTempDc) ProtoMessage() {}

func (x *TLPQInnerDataTempDc) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLPQInnerDataTempDc.ProtoReflect.Descriptor instead.
func (*TLPQInnerDataTempDc) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{12}
}

func (x *TLPQInnerDataTempDc) GetData2() *P_QInnerData {
	if x != nil {
		return x.Data2
	}
	return nil
}

// ResPQ <--
//   - TL_resPQ
type ResPQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredicateName               string        `protobuf:"bytes,1,opt,name=predicate_name,json=predicateName,proto3" json:"predicate_name,omitempty"`
	Constructor                 TLConstructor `protobuf:"varint,2,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Nonce                       []byte        `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ServerNonce                 []byte        `protobuf:"bytes,4,opt,name=server_nonce,json=serverNonce,proto3" json:"server_nonce,omitempty"`
	Pq                          string        `protobuf:"bytes,5,opt,name=pq,proto3" json:"pq,omitempty"`
	ServerPublicKeyFingerprints []int64       `protobuf:"varint,6,rep,packed,name=server_public_key_fingerprints,json=serverPublicKeyFingerprints,proto3" json:"server_public_key_fingerprints,omitempty"`
}

func (x *ResPQ) Reset() {
	*x = ResPQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResPQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResPQ) ProtoMessage() {}

func (x *ResPQ) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResPQ.ProtoReflect.Descriptor instead.
func (*ResPQ) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{13}
}

func (x *ResPQ) GetPredicateName() string {
	if x != nil {
		return x.PredicateName
	}
	return ""
}

func (x *ResPQ) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *ResPQ) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *ResPQ) GetServerNonce() []byte {
	if x != nil {
		return x.ServerNonce
	}
	return nil
}

func (x *ResPQ) GetPq() string {
	if x != nil {
		return x.Pq
	}
	return ""
}

func (x *ResPQ) GetServerPublicKeyFingerprints() []int64 {
	if x != nil {
		return x.ServerPublicKeyFingerprints
	}
	return nil
}

// TL_resPQ
type TLResPQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *ResPQ `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLResPQ) Reset() {
	*x = TLResPQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLResPQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLResPQ) ProtoMessage() {}

func (x *TLResPQ) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLResPQ.ProtoReflect.Descriptor instead.
func (*TLResPQ) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{14}
}

func (x *TLResPQ) GetData2() *ResPQ {
	if x != nil {
		return x.Data2
	}
	return nil
}

// Server_DH_Params <--
//   - TL_server_DH_params_fail
//   - TL_server_DH_params_ok
type Server_DH_Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredicateName   string        `protobuf:"bytes,1,opt,name=predicate_name,json=predicateName,proto3" json:"predicate_name,omitempty"`
	Constructor     TLConstructor `protobuf:"varint,2,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Nonce           []byte        `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ServerNonce     []byte        `protobuf:"bytes,4,opt,name=server_nonce,json=serverNonce,proto3" json:"server_nonce,omitempty"`
	NewNonceHash    []byte        `protobuf:"bytes,5,opt,name=new_nonce_hash,json=newNonceHash,proto3" json:"new_nonce_hash,omitempty"`
	EncryptedAnswer string        `protobuf:"bytes,6,opt,name=encrypted_answer,json=encryptedAnswer,proto3" json:"encrypted_answer,omitempty"`
}

func (x *Server_DH_Params) Reset() {
	*x = Server_DH_Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_DH_Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_DH_Params) ProtoMessage() {}

func (x *Server_DH_Params) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_DH_Params.ProtoReflect.Descriptor instead.
func (*Server_DH_Params) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{15}
}

func (x *Server_DH_Params) GetPredicateName() string {
	if x != nil {
		return x.PredicateName
	}
	return ""
}

func (x *Server_DH_Params) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *Server_DH_Params) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *Server_DH_Params) GetServerNonce() []byte {
	if x != nil {
		return x.ServerNonce
	}
	return nil
}

func (x *Server_DH_Params) GetNewNonceHash() []byte {
	if x != nil {
		return x.NewNonceHash
	}
	return nil
}

func (x *Server_DH_Params) GetEncryptedAnswer() string {
	if x != nil {
		return x.EncryptedAnswer
	}
	return ""
}

// TL_server_DH_params_fail
type TLServer_DHParamsFail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *Server_DH_Params `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLServer_DHParamsFail) Reset() {
	*x = TLServer_DHParamsFail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLServer_DHParamsFail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLServer_DHParamsFail) ProtoMessage() {}

func (x *TLServer_DHParamsFail) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLServer_DHParamsFail.ProtoReflect.Descriptor instead.
func (*TLServer_DHParamsFail) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{16}
}

func (x *TLServer_DHParamsFail) GetData2() *Server_DH_Params {
	if x != nil {
		return x.Data2
	}
	return nil
}

// TL_server_DH_params_ok
type TLServer_DHParamsOk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *Server_DH_Params `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLServer_DHParamsOk) Reset() {
	*x = TLServer_DHParamsOk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLServer_DHParamsOk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLServer_DHParamsOk) ProtoMessage() {}

func (x *TLServer_DHParamsOk) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLServer_DHParamsOk.ProtoReflect.Descriptor instead.
func (*TLServer_DHParamsOk) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{17}
}

func (x *TLServer_DHParamsOk) GetData2() *Server_DH_Params {
	if x != nil {
		return x.Data2
	}
	return nil
}

// Server_DH_inner_data <--
//   - TL_server_DH_inner_data
type Server_DHInnerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredicateName string        `protobuf:"bytes,1,opt,name=predicate_name,json=predicateName,proto3" json:"predicate_name,omitempty"`
	Constructor   TLConstructor `protobuf:"varint,2,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Nonce         []byte        `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ServerNonce   []byte        `protobuf:"bytes,4,opt,name=server_nonce,json=serverNonce,proto3" json:"server_nonce,omitempty"`
	G             int32         `protobuf:"varint,5,opt,name=g,proto3" json:"g,omitempty"`
	DhPrime       string        `protobuf:"bytes,6,opt,name=dh_prime,json=dhPrime,proto3" json:"dh_prime,omitempty"`
	GA            string        `protobuf:"bytes,7,opt,name=g_a,json=gA,proto3" json:"g_a,omitempty"`
	ServerTime    int32         `protobuf:"varint,8,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
}

func (x *Server_DHInnerData) Reset() {
	*x = Server_DHInnerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_DHInnerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_DHInnerData) ProtoMessage() {}

func (x *Server_DHInnerData) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_DHInnerData.ProtoReflect.Descriptor instead.
func (*Server_DHInnerData) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{18}
}

func (x *Server_DHInnerData) GetPredicateName() string {
	if x != nil {
		return x.PredicateName
	}
	return ""
}

func (x *Server_DHInnerData) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *Server_DHInnerData) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *Server_DHInnerData) GetServerNonce() []byte {
	if x != nil {
		return x.ServerNonce
	}
	return nil
}

func (x *Server_DHInnerData) GetG() int32 {
	if x != nil {
		return x.G
	}
	return 0
}

func (x *Server_DHInnerData) GetDhPrime() string {
	if x != nil {
		return x.DhPrime
	}
	return ""
}

func (x *Server_DHInnerData) GetGA() string {
	if x != nil {
		return x.GA
	}
	return ""
}

func (x *Server_DHInnerData) GetServerTime() int32 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

// TL_server_DH_inner_data
type TLServer_DHInnerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *Server_DHInnerData `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLServer_DHInnerData) Reset() {
	*x = TLServer_DHInnerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLServer_DHInnerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLServer_DHInnerData) ProtoMessage() {}

func (x *TLServer_DHInnerData) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLServer_DHInnerData.ProtoReflect.Descriptor instead.
func (*TLServer_DHInnerData) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{19}
}

func (x *TLServer_DHInnerData) GetData2() *Server_DHInnerData {
	if x != nil {
		return x.Data2
	}
	return nil
}

// Set_client_DH_params_answer <--
//   - TL_dh_gen_ok
//   - TL_dh_gen_retry
//   - TL_dh_gen_fail
type SetClient_DHParamsAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredicateName string        `protobuf:"bytes,1,opt,name=predicate_name,json=predicateName,proto3" json:"predicate_name,omitempty"`
	Constructor   TLConstructor `protobuf:"varint,2,opt,name=constructor,proto3,enum=mtproto.TLConstructor" json:"constructor,omitempty"`
	Nonce         []byte        `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ServerNonce   []byte        `protobuf:"bytes,4,opt,name=server_nonce,json=serverNonce,proto3" json:"server_nonce,omitempty"`
	NewNonceHash1 []byte        `protobuf:"bytes,5,opt,name=new_nonce_hash1,json=newNonceHash1,proto3" json:"new_nonce_hash1,omitempty"`
	NewNonceHash2 []byte        `protobuf:"bytes,6,opt,name=new_nonce_hash2,json=newNonceHash2,proto3" json:"new_nonce_hash2,omitempty"`
	NewNonceHash3 []byte        `protobuf:"bytes,7,opt,name=new_nonce_hash3,json=newNonceHash3,proto3" json:"new_nonce_hash3,omitempty"`
}

func (x *SetClient_DHParamsAnswer) Reset() {
	*x = SetClient_DHParamsAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetClient_DHParamsAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetClient_DHParamsAnswer) ProtoMessage() {}

func (x *SetClient_DHParamsAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetClient_DHParamsAnswer.ProtoReflect.Descriptor instead.
func (*SetClient_DHParamsAnswer) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{20}
}

func (x *SetClient_DHParamsAnswer) GetPredicateName() string {
	if x != nil {
		return x.PredicateName
	}
	return ""
}

func (x *SetClient_DHParamsAnswer) GetConstructor() TLConstructor {
	if x != nil {
		return x.Constructor
	}
	return TLConstructor_CRC32_UNKNOWN
}

func (x *SetClient_DHParamsAnswer) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *SetClient_DHParamsAnswer) GetServerNonce() []byte {
	if x != nil {
		return x.ServerNonce
	}
	return nil
}

func (x *SetClient_DHParamsAnswer) GetNewNonceHash1() []byte {
	if x != nil {
		return x.NewNonceHash1
	}
	return nil
}

func (x *SetClient_DHParamsAnswer) GetNewNonceHash2() []byte {
	if x != nil {
		return x.NewNonceHash2
	}
	return nil
}

func (x *SetClient_DHParamsAnswer) GetNewNonceHash3() []byte {
	if x != nil {
		return x.NewNonceHash3
	}
	return nil
}

// TL_dh_gen_ok
type TLDhGenOk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *SetClient_DHParamsAnswer `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLDhGenOk) Reset() {
	*x = TLDhGenOk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLDhGenOk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLDhGenOk) ProtoMessage() {}

func (x *TLDhGenOk) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLDhGenOk.ProtoReflect.Descriptor instead.
func (*TLDhGenOk) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{21}
}

func (x *TLDhGenOk) GetData2() *SetClient_DHParamsAnswer {
	if x != nil {
		return x.Data2
	}
	return nil
}

// TL_dh_gen_retry
type TLDhGenRetry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *SetClient_DHParamsAnswer `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLDhGenRetry) Reset() {
	*x = TLDhGenRetry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLDhGenRetry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLDhGenRetry) ProtoMessage() {}

func (x *TLDhGenRetry) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLDhGenRetry.ProtoReflect.Descriptor instead.
func (*TLDhGenRetry) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{22}
}

func (x *TLDhGenRetry) GetData2() *SetClient_DHParamsAnswer {
	if x != nil {
		return x.Data2
	}
	return nil
}

// TL_dh_gen_fail
type TLDhGenFail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data2 *SetClient_DHParamsAnswer `protobuf:"bytes,1,opt,name=data2,proto3" json:"data2,omitempty"`
}

func (x *TLDhGenFail) Reset() {
	*x = TLDhGenFail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_tl_handshake_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLDhGenFail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLDhGenFail) ProtoMessage() {}

func (x *TLDhGenFail) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLDhGenFail.ProtoReflect.Descriptor instead.
func (*TLDhGenFail) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_proto_rawDescGZIP(), []int{23}
}

func (x *TLDhGenFail) GetData2() *SetClient_DHParamsAnswer {
	if x != nil {
		return x.Data2
	}
	return nil
}

var File_schema_tl_handshake_proto protoreflect.FileDescriptor

var file_schema_tl_handshake_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x74, 0x6c, 0x2e, 0x68, 0x61, 0x6e, 0x64,
	0x73, 0x68, 0x61, 0x6b, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x74, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x74, 0x6c, 0x2e,
	0x63, 0x72, 0x63, 0x33, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x02, 0x0a, 0x10,
	0x42, 0x69, 0x6e, 0x64, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x6e, 0x65, 0x72,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x6d, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x6d,
	0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x65, 0x6d,
	0x70, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74,
	0x22, 0x49, 0x0a, 0x16, 0x54, 0x4c, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x05, 0x64, 0x61,
	0x74, 0x61, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x22, 0xdc, 0x01, 0x0a, 0x14,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x44, 0x48, 0x5f, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x5f,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x0f, 0x0a, 0x03, 0x67, 0x5f, 0x62,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x67, 0x42, 0x22, 0x4e, 0x0a, 0x17, 0x54, 0x4c,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x44, 0x48, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x44, 0x48, 0x5f, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x22, 0x74, 0x0a, 0x11, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72,
	0x22, 0x4a, 0x0a, 0x16, 0x54, 0x4c, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6f, 0x6b, 0x12, 0x30, 0x0a, 0x05, 0x64, 0x61,
	0x74, 0x61, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x41, 0x75, 0x74, 0x68, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x73, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x22, 0x4c, 0x0a, 0x18,
	0x54, 0x4c, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61,
	0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x73, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x22, 0x4c, 0x0a, 0x18, 0x54, 0x4c,
	0x5f, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x12, 0x30, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x22, 0xa2, 0x02, 0x0a, 0x0e, 0x50, 0x5f, 0x51,
	0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x70, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x71, 0x12, 0x0c, 0x0a, 0x01,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x70, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x64, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x64, 0x63, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x22, 0x42, 0x0a,
	0x11, 0x54, 0x4c, 0x5f, 0x70, 0x5f, 0x71, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x2d, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x5f, 0x51, 0x5f,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61,
	0x32, 0x22, 0x45, 0x0a, 0x14, 0x54, 0x4c, 0x5f, 0x70, 0x5f, 0x71, 0x5f, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x63, 0x12, 0x2d, 0x0a, 0x05, 0x64, 0x61, 0x74,
	0x61, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x5f, 0x51, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x22, 0x47, 0x0a, 0x16, 0x54, 0x4c, 0x5f, 0x70,
	0x5f, 0x71, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x12, 0x2d, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x5f, 0x51, 0x5f,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61,
	0x32, 0x22, 0x4a, 0x0a, 0x19, 0x54, 0x4c, 0x5f, 0x70, 0x5f, 0x71, 0x5f, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x64, 0x63, 0x12, 0x2d,
	0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x5f, 0x51, 0x5f, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x22, 0xf6, 0x01,
	0x0a, 0x05, 0x52, 0x65, 0x73, 0x50, 0x51, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70,
	0x71, 0x12, 0x43, 0x0a, 0x1e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x1b, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x30, 0x0a, 0x08, 0x54, 0x4c, 0x5f, 0x72, 0x65, 0x73,
	0x50, 0x51, 0x12, 0x24, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x50,
	0x51, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x22, 0xfd, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5f, 0x44, 0x48, 0x5f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x5f, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0c, 0x6e, 0x65, 0x77, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x29, 0x0a,
	0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x4b, 0x0a, 0x18, 0x54, 0x4c, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x44, 0x48, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5f,
	0x66, 0x61, 0x69, 0x6c, 0x12, 0x2f, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x44, 0x48, 0x5f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x05,
	0x64, 0x61, 0x74, 0x61, 0x32, 0x22, 0x49, 0x0a, 0x16, 0x54, 0x4c, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x44, 0x48, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5f, 0x6f, 0x6b, 0x12,
	0x2f, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x44, 0x48, 0x5f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32,
	0x22, 0x8b, 0x02, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x44, 0x48, 0x5f, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x38, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01,
	0x67, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x68, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x68, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x12, 0x0f, 0x0a, 0x03,
	0x67, 0x5f, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x67, 0x41, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4e,
	0x0a, 0x17, 0x54, 0x4c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x44, 0x48, 0x5f, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x05, 0x64, 0x61, 0x74,
	0x61, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x44, 0x48, 0x5f, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x22, 0xaf,
	0x02, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x44, 0x48,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x74, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x4c, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x48, 0x61, 0x73, 0x68, 0x31,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x4e, 0x6f,
	0x6e, 0x63, 0x65, 0x48, 0x61, 0x73, 0x68, 0x32, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x33, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x48, 0x61, 0x73, 0x68, 0x33,
	0x22, 0x4a, 0x0a, 0x0c, 0x54, 0x4c, 0x5f, 0x64, 0x68, 0x5f, 0x67, 0x65, 0x6e, 0x5f, 0x6f, 0x6b,
	0x12, 0x3a, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x44, 0x48, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5f, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x22, 0x4d, 0x0a, 0x0f,
	0x54, 0x4c, 0x5f, 0x64, 0x68, 0x5f, 0x67, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x12,
	0x3a, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6d, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x44, 0x48, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5f, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x22, 0x4c, 0x0a, 0x0e, 0x54,
	0x4c, 0x5f, 0x64, 0x68, 0x5f, 0x67, 0x65, 0x6e, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x12, 0x3a, 0x0a,
	0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x44, 0x48, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5f, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x69, 0x2d, 0x63, 0x61, 0x6d, 0x62,
	0x6f, 0x64, 0x69, 0x61, 0x2f, 0x68, 0x39, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schema_tl_handshake_proto_rawDescOnce sync.Once
	file_schema_tl_handshake_proto_rawDescData = file_schema_tl_handshake_proto_rawDesc
)

func file_schema_tl_handshake_proto_rawDescGZIP() []byte {
	file_schema_tl_handshake_proto_rawDescOnce.Do(func() {
		file_schema_tl_handshake_proto_rawDescData = protoimpl.X.CompressGZIP(file_schema_tl_handshake_proto_rawDescData)
	})
	return file_schema_tl_handshake_proto_rawDescData
}

var file_schema_tl_handshake_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_schema_tl_handshake_proto_goTypes = []interface{}{
	(*BindAuthKeyInner)(nil),         // 0: mtproto.BindAuthKeyInner
	(*TLBindAuthKeyInner)(nil),       // 1: mtproto.TL_bind_auth_key_inner
	(*Client_DH_Inner_Data)(nil),     // 2: mtproto.Client_DH_Inner_Data
	(*TLClient_DHInnerData)(nil),     // 3: mtproto.TL_client_DH_inner_data
	(*DestroyAuthKeyRes)(nil),        // 4: mtproto.DestroyAuthKeyRes
	(*TLDestroyAuthKeyOk)(nil),       // 5: mtproto.TL_destroy_auth_key_ok
	(*TLDestroyAuthKeyNone)(nil),     // 6: mtproto.TL_destroy_auth_key_none
	(*TLDestroyAuthKeyFail)(nil),     // 7: mtproto.TL_destroy_auth_key_fail
	(*P_QInnerData)(nil),             // 8: mtproto.P_Q_inner_data
	(*TLPQInnerData)(nil),            // 9: mtproto.TL_p_q_inner_data
	(*TLPQInnerDataDc)(nil),          // 10: mtproto.TL_p_q_inner_data_dc
	(*TLPQInnerDataTemp)(nil),        // 11: mtproto.TL_p_q_inner_data_temp
	(*TLPQInnerDataTempDc)(nil),      // 12: mtproto.TL_p_q_inner_data_temp_dc
	(*ResPQ)(nil),                    // 13: mtproto.ResPQ
	(*TLResPQ)(nil),                  // 14: mtproto.TL_resPQ
	(*Server_DH_Params)(nil),         // 15: mtproto.Server_DH_Params
	(*TLServer_DHParamsFail)(nil),    // 16: mtproto.TL_server_DH_params_fail
	(*TLServer_DHParamsOk)(nil),      // 17: mtproto.TL_server_DH_params_ok
	(*Server_DHInnerData)(nil),       // 18: mtproto.Server_DH_inner_data
	(*TLServer_DHInnerData)(nil),     // 19: mtproto.TL_server_DH_inner_data
	(*SetClient_DHParamsAnswer)(nil), // 20: mtproto.Set_client_DH_params_answer
	(*TLDhGenOk)(nil),                // 21: mtproto.TL_dh_gen_ok
	(*TLDhGenRetry)(nil),             // 22: mtproto.TL_dh_gen_retry
	(*TLDhGenFail)(nil),              // 23: mtproto.TL_dh_gen_fail
	(TLConstructor)(0),               // 24: mtproto.TLConstructor
}
var file_schema_tl_handshake_proto_depIdxs = []int32{
	24, // 0: mtproto.BindAuthKeyInner.constructor:type_name -> mtproto.TLConstructor
	0,  // 1: mtproto.TL_bind_auth_key_inner.data2:type_name -> mtproto.BindAuthKeyInner
	24, // 2: mtproto.Client_DH_Inner_Data.constructor:type_name -> mtproto.TLConstructor
	2,  // 3: mtproto.TL_client_DH_inner_data.data2:type_name -> mtproto.Client_DH_Inner_Data
	24, // 4: mtproto.DestroyAuthKeyRes.constructor:type_name -> mtproto.TLConstructor
	4,  // 5: mtproto.TL_destroy_auth_key_ok.data2:type_name -> mtproto.DestroyAuthKeyRes
	4,  // 6: mtproto.TL_destroy_auth_key_none.data2:type_name -> mtproto.DestroyAuthKeyRes
	4,  // 7: mtproto.TL_destroy_auth_key_fail.data2:type_name -> mtproto.DestroyAuthKeyRes
	24, // 8: mtproto.P_Q_inner_data.constructor:type_name -> mtproto.TLConstructor
	8,  // 9: mtproto.TL_p_q_inner_data.data2:type_name -> mtproto.P_Q_inner_data
	8,  // 10: mtproto.TL_p_q_inner_data_dc.data2:type_name -> mtproto.P_Q_inner_data
	8,  // 11: mtproto.TL_p_q_inner_data_temp.data2:type_name -> mtproto.P_Q_inner_data
	8,  // 12: mtproto.TL_p_q_inner_data_temp_dc.data2:type_name -> mtproto.P_Q_inner_data
	24, // 13: mtproto.ResPQ.constructor:type_name -> mtproto.TLConstructor
	13, // 14: mtproto.TL_resPQ.data2:type_name -> mtproto.ResPQ
	24, // 15: mtproto.Server_DH_Params.constructor:type_name -> mtproto.TLConstructor
	15, // 16: mtproto.TL_server_DH_params_fail.data2:type_name -> mtproto.Server_DH_Params
	15, // 17: mtproto.TL_server_DH_params_ok.data2:type_name -> mtproto.Server_DH_Params
	24, // 18: mtproto.Server_DH_inner_data.constructor:type_name -> mtproto.TLConstructor
	18, // 19: mtproto.TL_server_DH_inner_data.data2:type_name -> mtproto.Server_DH_inner_data
	24, // 20: mtproto.Set_client_DH_params_answer.constructor:type_name -> mtproto.TLConstructor
	20, // 21: mtproto.TL_dh_gen_ok.data2:type_name -> mtproto.Set_client_DH_params_answer
	20, // 22: mtproto.TL_dh_gen_retry.data2:type_name -> mtproto.Set_client_DH_params_answer
	20, // 23: mtproto.TL_dh_gen_fail.data2:type_name -> mtproto.Set_client_DH_params_answer
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_schema_tl_handshake_proto_init() }
func file_schema_tl_handshake_proto_init() {
	if File_schema_tl_handshake_proto != nil {
		return
	}
	file_schema_tl_crc32_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_schema_tl_handshake_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindAuthKeyInner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLBindAuthKeyInner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Client_DH_Inner_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLClient_DHInnerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyAuthKeyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLDestroyAuthKeyOk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLDestroyAuthKeyNone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLDestroyAuthKeyFail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P_QInnerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLPQInnerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLPQInnerDataDc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLPQInnerDataTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLPQInnerDataTempDc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResPQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLResPQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_DH_Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLServer_DHParamsFail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLServer_DHParamsOk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server_DHInnerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLServer_DHInnerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetClient_DHParamsAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLDhGenOk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLDhGenRetry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_tl_handshake_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLDhGenFail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schema_tl_handshake_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schema_tl_handshake_proto_goTypes,
		DependencyIndexes: file_schema_tl_handshake_proto_depIdxs,
		MessageInfos:      file_schema_tl_handshake_proto_msgTypes,
	}.Build()
	File_schema_tl_handshake_proto = out.File
	file_schema_tl_handshake_proto_rawDesc = nil
	file_schema_tl_handshake_proto_goTypes = nil
	file_schema_tl_handshake_proto_depIdxs = nil
}
